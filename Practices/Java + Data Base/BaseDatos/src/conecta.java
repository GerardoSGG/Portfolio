
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

public class conecta extends javax.swing.JFrame {

    conexion verificar = new conexion();//instanciamos la clase conexion
    Connection conexion = null;

    public conecta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_conecta = new javax.swing.JButton();
        Btn_ConGral = new javax.swing.JButton();
        BTN_Insertar = new javax.swing.JButton();
        BTN_Insertar2 = new javax.swing.JButton();
        nom = new javax.swing.JTextField();
        esp = new javax.swing.JTextField();
        nc = new javax.swing.JTextField();
        plan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BTN_Buscar = new javax.swing.JButton();
        BTN_Modificar = new javax.swing.JButton();
        BTN_Eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_conecta.setText("Verificar conexion");
        btn_conecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_conectaActionPerformed(evt);
            }
        });

        Btn_ConGral.setText("Consulta general");
        Btn_ConGral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ConGralActionPerformed(evt);
            }
        });

        BTN_Insertar.setText("Insertar");
        BTN_Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_InsertarActionPerformed(evt);
            }
        });

        BTN_Insertar2.setText("Insertar 2");
        BTN_Insertar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_Insertar2ActionPerformed(evt);
            }
        });

        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });

        plan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planActionPerformed(evt);
            }
        });

        jLabel1.setText("NOMBRE:");

        jLabel2.setText("NÂ° CONTROL:");

        jLabel3.setText("ESPECIALIDAD:");

        jLabel4.setText("PLAN:");

        BTN_Buscar.setText("Buscar");
        BTN_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_BuscarActionPerformed(evt);
            }
        });

        BTN_Modificar.setText("Modificar");
        BTN_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ModificarActionPerformed(evt);
            }
        });

        BTN_Eliminar.setText("Eliminar");
        BTN_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_conecta, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(BTN_Insertar)
                .addGap(58, 58, 58)
                .addComponent(Btn_ConGral)
                .addGap(41, 41, 41)
                .addComponent(BTN_Insertar2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(nc, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(57, 57, 57)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(plan, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(esp, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTN_Buscar)
                        .addGap(28, 28, 28)
                        .addComponent(BTN_Modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTN_Eliminar)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_conecta)
                    .addComponent(BTN_Insertar)
                    .addComponent(Btn_ConGral)
                    .addComponent(BTN_Insertar2))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(esp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BTN_Buscar)
                            .addComponent(BTN_Modificar)
                            .addComponent(BTN_Eliminar))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void insertar() {
        String cons = " INSERT INTO `alumno` (ID, NC, NOM, ESP, PLAN) VALUES(NULL, '" + 
                nc.getText().toUpperCase() + "', '" + nom.getText().toUpperCase() + 
                "', '" + esp.getText().toUpperCase() + "', '" + plan.getText().toUpperCase() +
                "'); ";//LE DECIMOS EN DONDE QUEREMOS INSERTAR LOS VALORES Y QUE VALORES VAMOS A INSERTAR y lo guardamos en la variable cons
        try {
            Statement st = conexion.createStatement();//para hacer la consulta: la sentencia statement sirve para procesar una sentencia SQL esatics
            st.execute(cons);//usamos la variable de tipo sentencia statement para ejecutar la consulta con los datos guardados en la variable cons
        } catch (Exception e) {//atrapamos la excepcion en caso de que surja alguna
            System.out.println(e.getMessage());//imprimimos la excepcion producida 
        }
    }

    boolean consulta(String eb, int tipo, boolean busca) {
        //Contener el num de registro consulta

        //Generar mi consulta
        String cons = eb;
        String[] arr = new String[5];//creamos una arreglo para guardar e imprimir los valores de la consulta que haremos
        boolean esta = false;//esta bandera indica si el dato se encuentra o no
        try {
            
            Statement st = conexion.createStatement();//para hacer la consulta
            ResultSet rs = st.executeQuery(cons);//para guardar en rs lo que se extrae de la consulta
            //la funcion del objeto Resultset es obtener los datos de columna correspondientes a un fila
            // Casi todos estos mÃ©todos toman un solo parÃ¡metro, que es el Ã­ndice que la columna tiene
            // dentro del ResultSet o bien el nombre de la columna
            if (rs.getRow() == 0) {//si las columnas de la variable resultset es igual a cero 
            System.out.println("NO EXISTE");//entonces imprimir no existe
            }//cierre del if
            while ((rs.next()) && (!busca)) {//el ciclo continuara mientras haya una fila que mostrar y busca se distinto a 
                arr[0] = rs.getString(1);//guardamos en el arreglo lo que esta contenido en rs de la columna 1
                arr[1] = rs.getString(2);//guardamos en el arreglo lo que esta contenido en rs de la columna 2
                arr[2] = rs.getString(3);//guardamos en el arreglo lo que esta contenido en rs de la columna 3
                arr[3] = rs.getString(4);//guardamos en el arreglo lo que esta contenido en rs de la columna 4
                arr[4] = rs.getString(5);//guardamos en el arreglo lo que esta contenido en rs de la columna 5

                if (tipo == 0) {//si tipo es igual a cero imprimir todo en una consulta general
                    System.out.println(arr[0] + " " + arr[1] + " " + arr[2] + " " + arr[3] + " " + arr[4]);// imprime los valores de el arreglo que contiene la consulta que hicimos
                } else {//si no solo seteamos los valores a los campos para mostrarlos
                    nc.setText(arr[1]);//le seteamos a la etiqueta numero de control lo obenido de la consulta
                    nom.setText(arr[2]);//le seteamos a la etiqueta nombre lo obenido de la consulta
                    esp.setText(arr[3]);//le seteamos a la etiqueta especialidad lo obenido de la consulta
                    plan.setText(arr[4]);//le seteamos a la etiqueta plan lo obenido de la consulta

                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return esta;
    }

    void insertar2() {
        try {
            if(!consulta("Select * from alumno WHERE nc='"+nc.getText()+"'",1,true)){
            PreparedStatement cons = conexion.prepareStatement("INSERT INTO alumno (ID,NC,NOM,ESP,PLAN)VALUES(null,?,?,?,?)");
            cons.setString(1, nom.getText().toUpperCase());
            cons.setString(2, nc.getText().toUpperCase());
            cons.setString(3, esp.getText().toUpperCase());
            cons.setString(4, plan.getText().toUpperCase());
            cons.executeUpdate();
            consulta(" SELECT * FROM `alumno`  ", 0, false);
            }else{
            JOptionPane.showMessageDialog(null, "YA EXISTE ESTE NUMERO DE CONTROL EN LA BASE DE DATOS");
            }} catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }


    private void btn_conectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_conectaActionPerformed
        conexion = verificar.conexion();

        if (conexion != null) {
            System.out.println("Conectado");//imprime conectado si se realiza la conexion
        } else {
            System.out.println("No conectado");//imprime no conectado en caso de que nopueda hacer la conexion
        }
    }//GEN-LAST:event_btn_conectaActionPerformed

    private void Btn_ConGralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ConGralActionPerformed
        consulta(" SELECT * FROM `alumno`  ", 0, false);//indicamos que queremos que consulte en este caso todo(*) de la tabla alumno
    }//GEN-LAST:event_Btn_ConGralActionPerformed

    private void BTN_InsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_InsertarActionPerformed
        insertar();
    }//GEN-LAST:event_BTN_InsertarActionPerformed

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void BTN_Insertar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_Insertar2ActionPerformed
        insertar2();
    }//GEN-LAST:event_BTN_Insertar2ActionPerformed

    private void planActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planActionPerformed

    private void BTN_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_BuscarActionPerformed
        if (nc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe primero el numero de control");
        } else {
            consulta(" SELECT * FROM `alumno` WHERE NC=" + nc.getText().toUpperCase(), 1, false);
        }
    }//GEN-LAST:event_BTN_BuscarActionPerformed

    private void BTN_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_EliminarActionPerformed
        try {
            if(consulta("Select * from alumno WHERE nc='"+nc.getText()+"'",1,true)){
            PreparedStatement cons = conexion.prepareStatement("DELETE FROM alumno WHERE nc='" + nc.getText() + "'");
            cons.executeUpdate();
            consulta("SELECT * FROM alumno", 0, false);
            }} catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error " + ex.getMessage());
        }
    }//GEN-LAST:event_BTN_EliminarActionPerformed

    private void BTN_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ModificarActionPerformed
        try {
            if(consulta("Select * from alumno WHERE nc='"+nc.getText()+"'",1,true)){
            PreparedStatement cons = conexion.prepareStatement("UPDATE alumno SET nom='" + nom.getText() + "',esp='" + esp.getText() + "',plan='" + plan.getText() + "' WHERE nc='" + nc.getText() + "'");
            cons.executeUpdate();
            consulta("SELECT * FROM alumno", 0, true);
        }} catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }
    }//GEN-LAST:event_BTN_ModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(conecta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(conecta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(conecta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(conecta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new conecta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Buscar;
    private javax.swing.JButton BTN_Eliminar;
    private javax.swing.JButton BTN_Insertar;
    private javax.swing.JButton BTN_Insertar2;
    private javax.swing.JButton BTN_Modificar;
    private javax.swing.JButton Btn_ConGral;
    private javax.swing.JButton btn_conecta;
    private javax.swing.JTextField esp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nc;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField plan;
    // End of variables declaration//GEN-END:variables
}
